# Find the lower bound and upper bound with binary search
class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        left = self.lower_bound(nums, target)
        right = self.upper_bound(nums, target)
        if left == right:
            return [-1, -1]
        else:
            return [left, right-1]
        
    def lower_bound(self, nums, target):
        left, right = 0, len(nums)
        while left < right:
            mid = (left+right) // 2
            if nums[mid] < target:
                left = mid+1
            else:
                right = mid
        return left
    
    def upper_bound(self, nums, target):
        left, right = 0, len(nums)
        while left < right:
            mid = (left+right) // 2
            if nums[mid] <= target:
                left = mid+1
            else:
                right = mid
        return left