# Solution 1: Dynamic Programming
class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        dp = [n*[1] for _ in range(m)]
        for i in range(1, m):
            for j in range(1, n):
                dp[i][j] = dp[i-1][j] + dp[i][j-1]
        return dp[m-1][n-1]

# Solution 2: Method of Permutaition and Combination
import math
class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        return math.factorial(m+n-2) // (math.factorial(m-1) * math.factorial(n-1))