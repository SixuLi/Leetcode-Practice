class Solution:
    # Solution 1 Depth-First-Search(DFS)
    def dfs(self, num, string, res, digits):
        if num == len(digits):
            res.append(string)
            return
        for letter in self.keys[digits[num]]:
            self.dfs(num+1, string + letter, res, digits)

    def letterCombinations(self, digits: str) -> List[str]:
        self.keys = {"1": "", "2": "abc", "3": "def", "4": "ghi",
                     "5": "jkl", "6": "mno", "7": "pqrs", "8": "tuv", "9": "wxyz"}
        length = len(digits)
        if length == 0:
            return []
        res = []
        self.dfs(0, "", res, digits)
        return res
