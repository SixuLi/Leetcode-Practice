class Solution:
    # Solution 1 DFS
    def dfs(self, l, r, res, path):
        if l == 0 and r == 0:
            res.append(path)
            return
        if l > 0:
            self.dfs(l-1, r, res, path+"(")
        if l < r:
            self.dfs(l, r-1, res, path+")")

    def generateParenthesis(self, n: int) -> List[str]:
        res = []
        self.dfs(n, n, res, "")
        return res
